DOM - ProcessingInstruction Object Attribute - data

https://www.tutorialspoint.com/dom/dom_processinginstruction_data.htm

XML, DOM, Document, Object, Model, simple, easy, steps, Overview, DOM Model, DOM Nodes, DOM Node Tree, DOM Node List, DOM Methods, DOM Loading, DOM Parser, DOM Traversing, DOM Navigation, DOM Accessing, Get, Set, Create, Add, Replace, Remove and Clone Node, Node Object, NodeList Object, NamedNodeMap Object, Document Object, DocumentImplementation Object, DocumentType Object, ProcessingInstruction Object, Entity Object, EntityReference Object, Notation Object, Element Object, Attribute Object, Text Object, CDATASection Object, Comment Object, XMLHttpRequest Object, ParseError Object, DOMException Object.

August-15-2017-02:34:12

The attribute data is a character that describes the information for the application to process immediately preceding the ?>. Syntax Following is the syntax for the usage of the data attribute. 
ProcessingInstruction.target
 S.No. Parameter & Description 1 data It is a character that describes the information for the application to process immediately preceding the ?>. Example Following example demonstrates the usage of the data attribute − 
<!DOCTYPE html>
<html>
   <head>
      <script>
         // loads the xml string in a dom object
         function loadXMLString(t) {
            // for non IE browsers
            if (window.DOMParser) {
               // create an instance for xml dom object
               parser = new DOMParser();
               xmlDoc = parser.parseFromString(t,"text/xml");
            } else // code for IE {  
               // create an instance for xml dom object
               xmlDoc = new ActiveXObject("Microsoft.XMLDOM");
               xmlDoc.async = false;
               xmlDoc.loadXML(t);
            }
            return xmlDoc;
         }
         function get_firstChild(p) {
            a = p.firstChild;
            return a;
         }
      </script>
   </head>
   <body>
      <script>
         var xml = "<Employee>";
         xml = xml+"<FirstName>";
         xml = xml+"<?piTarget piData more piData?>";
         xml = xml+"</FirstName>";
         
         xml = xml+"</Employee>";

         // calls the loadXMLString() with "text" function and store the xml dom in a variable
         var xmlDoc = loadXMLString(xml);

         var x = get_firstChild(xmlDoc.getElementsByTagName("FirstName")[0]);
         document.write("First child is : ");
         document.write(x.nodeName);

         //the following should be "piData more piData"
         alert(x.data);

         //the following should be "piTarget"
         alert(x.target);
      </script>
   </body>
</html>
 Execution Save this file as dom_processinginstruction_data.htm on the server path. We will get the output as shown below − dom_processinginstruction_object.htm
