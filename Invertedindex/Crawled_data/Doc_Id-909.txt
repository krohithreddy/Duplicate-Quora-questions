DOM - Node Object Method - replaceChild

https://www.tutorialspoint.com/dom/dom_node_replacechild.htm

XML, DOM, Document, Object, Model, simple, easy, steps, Overview, DOM Model, DOM Nodes, DOM Node Tree, DOM Node List, DOM Methods, DOM Loading, DOM Parser, DOM Traversing, DOM Navigation, DOM Accessing, Get, Set, Create, Add, Replace, Remove and Clone Node, Node Object, NodeList Object, NamedNodeMap Object, Document Object, DocumentImplementation Object, DocumentType Object, ProcessingInstruction Object, Entity Object, EntityReference Object, Notation Object, Element Object, Attribute Object, Text Object, CDATASection Object, Comment Object, XMLHttpRequest Object, ParseError Object, DOMException Object.

August-15-2017-02:34:12

The method replaceChild is used to replace old child node with a new node. This returns the node replaced. Syntax Following is the syntax for the usage of the replaceChild method. 
nodeObject.replaceChild(Node newChild, Node oldChild)
 S.No. Parameter & Description 1 newChild It is the new child to be replaced with the old child. It is of type Node. 2 oldChild this parameter is replaced by the new child. It is of type Node. This method returns the node replaced. Example node.xml contents are as below − 
<?xml version = "1.0"?>
<Company>
   <Employee category = "Technical">
      <FirstName>Tanmay</FirstName>
      <LastName>Patil</LastName>
      <ContactNo>1234567890</ContactNo>
      <Email>tanmaypatil@xyz.com</Email>
   </Employee>
   
   <Employee category = "Non-Technical">
      <FirstName>Taniya</FirstName>
      <LastName>Mishra</LastName>
      <ContactNo>1234667898</ContactNo>
      <Email>taniyamishra@xyz.com</Email>
   </Employee>
   
   <Employee category = "Management">
      <FirstName>Tanisha</FirstName>
      <LastName>Sharma</LastName>
      <ContactNo>1234562350</ContactNo>
      <Email>tanishasharma@xyz.com</Email>
   </Employee>
</Company>
 Following example demonstrates the usage of the replaceChild method − 
<!DOCTYPE html>
<html>
   <head>
      <script>
         function loadXMLDoc(filename) {
            if (window.XMLHttpRequest) {
               xhttp = new XMLHttpRequest();
            } else // code for IE5 and IE6 {
               xhttp = new ActiveXObject("Microsoft.XMLHTTP");
            }
            xhttp.open("GET",filename,false);
            xhttp.send();
            return xhttp.responseXML;
         }
      </script>
   </head>
   <body>
      <script>
         xmlDoc = loadXMLDoc("/dom/node.xml");

         x = xmlDoc.documentElement;

         create_e1 = xmlDoc.createElement("Employee");
         create_e2 = xmlDoc.createElement("Email");
         create_t = xmlDoc.createTextNode("tanu@xyz.com");

         create_e2.appendChild(create_t);
         create_e1.appendChild(create_e2);

         y = xmlDoc.getElementsByTagName("Employee")[0]
         x.replaceChild(create_e1,y);

         z = xmlDoc.getElementsByTagName("Email")[0];
         document.write("After Replacement  : ")
         document.write(z.childNodes[0].nodeValue);

      </script>
   </body>
</html>
 Execution Save this file as nodemethod_replacechild.htm on the server path (this file and node.xml should be on the same path in your server). We will get the output as shown below − 
After Replacement : tanu@xyz.com
 dom_node_object.htm
