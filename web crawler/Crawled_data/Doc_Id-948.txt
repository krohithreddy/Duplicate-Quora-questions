ebXML - Registry & Repository Service

https://www.tutorialspoint.com/ebxml/ebxml_registry_service.htm

ebXML, Tutorial, Learn, understanding, B2B, C2C, B2C, Message, Services, System, Registry, Repository, Core, Components, Architecture, Business, Processes, CPP, CPA, Collaboration, Context, Affect, Specifications, Standards, Vision, Goal, OASIS, UN/CEFACT, Agreement, Security, Resources.

August-15-2017-02:34:17

An ebXML registry serves as the index and application gateway for a repository to the outside world, and it contains the API that governs how parties interact with the repository. An ebXML repository is the holder of the components. The ebXML registry is central to the ebXML architecture. The registry can also be viewed as an API to the database of items that supports e-business with ebXML. The ebXML registry serves as a database for sharing relevant company information for ebXML business transactions, such as corporate capabilities, business process, technical blueprints, order forms, invoices, and so on. Items in the repository are created, updated, or deleted through requests made to the registry. Repositories provide trading partners with the shared business semantics. The ebXML registry is an interface for accessing and discovering shared business semantics. The registry interface is designed to be independent of the underlying network protocol stack, such as HTTP or SMTP over TCP/IP. The registry provides a stable, persistent store of submitted content, which includes XML schema and documents, process descriptions, core components, context descriptions, UML models, information about parties, and even software components. This can be represented as a software stack of services, as shown below: Goals of ebXML Registry The goal of ebXML registry is to enable information sharing between interested parties for the purpose of business process integration between them. Benefits of ebXML registry An ebXML registry provides the following benefits: Discovery and maintenance of registered content. Support for collaborative development, where users can create XML content and submit it to the registry for use and potential enhancement by the authorized parties. Persistence of Web Services Business Process Execution Language (WS-BPEL), WSDL, and business documents during interactions between trading partners. Secure version control of registered content. Federation of cooperating registries to provide a single view of registered content by seamless querying, synchronization, and relocation of registered content. Event notification via email or Web services. Compliance According to the ebXML Registry Services Specification, a registry implementation complies with the ebXML specification if it meets the following conditions: It supports the ebXML Registry Information Model. It supports the syntax and semantics of the registry interfaces and security. It supports the ebXML registry DTD. Support of the syntax and semantics of SQL query in the registry is optional. A registry client implementation complies with the ebXML specification if it meets the following conditions: It supports the ebXML CPA and bootstrapping process. The syntax and the semantics of the registry client interfaces. The ebXML error message DTD. The ebXML registry DTD. Registry Objects and Metadata Registry objects Refers to an object that is submitted to registry for storage and safekeeping called 'Repository item' XML document or DTD, business process models, CPPs, etc. Metadata It is used by registry to classify and manage registry objects. It is represented by Registry Entry Registry Information Model (RIM) The Registry Information Model (RIM) provides a high-level blueprint for metadata in the ebXML registry. This can be represented as a software stack of services or as a service pyramid as shown in the figure below. The elements of the information model represent meta data about the content, not the content itself in the repository. The registry information model defines the types of objects stored and organized in the registry. The information model is a roadmap to the type of meta data and the relationships between metadata. The registry information model may be mapped to a relational database schema, object database schema, or some other physical schema.
